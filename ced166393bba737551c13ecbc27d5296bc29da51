{
  "comments": [
    {
      "key": {
        "uuid": "5a72e520_30c85374",
        "filename": "MineZPRft/Renderer/Renderer.cpp",
        "patchSetId": 3
      },
      "lineNbr": 205,
      "author": {
        "id": 1003055
      },
      "writtenOn": "2016-02-29T18:07:49Z",
      "side": 1,
      "message": "Why do we use TerrainShader for rendering points and MainShader for rendering triangles?",
      "range": {
        "startLine": 180,
        "startChar": 11,
        "endLine": 205,
        "endChar": 13
      },
      "revId": "ced166393bba737551c13ecbc27d5296bc29da51",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a72e520_90a667c0",
        "filename": "MineZPRft/Terrain/Chunk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 54,
      "author": {
        "id": 1003055
      },
      "writtenOn": "2016-02-29T18:07:49Z",
      "side": 1,
      "message": "Better looking would be to make floatCountPerVertex field in the class and fill it beforehand, then there wouldn\u0027t be \u0027if\u0027 in this division...alas it should be faster this way, so I guess it\u0027s ok.",
      "range": {
        "startLine": 53,
        "startChar": 35,
        "endLine": 54,
        "endChar": 85
      },
      "revId": "ced166393bba737551c13ecbc27d5296bc29da51",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a72e520_d0b0dff6",
        "filename": "MineZPRft/Terrain/Chunk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 120,
      "author": {
        "id": 1003055
      },
      "writtenOn": "2016-02-29T18:07:49Z",
      "side": 1,
      "message": "There could be function pointer that we\u0027d bind in constructor and change with a method (along with useGreedyMeshing or floatCountPerVertex or sth). It would be much cleaner and there would be no need to give greedyMeshing argument every time we use Chunk::Generate().\n\nWhaddya think?",
      "range": {
        "startLine": 117,
        "startChar": 8,
        "endLine": 120,
        "endChar": 31
      },
      "revId": "ced166393bba737551c13ecbc27d5296bc29da51",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a72e520_f07b1b27",
        "filename": "MineZPRft/Terrain/Chunk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 434,
      "author": {
        "id": 1003055
      },
      "writtenOn": "2016-02-29T18:07:49Z",
      "side": 1,
      "message": "This could be replaced by Chunk::ProcessPlane private method imo - would result in less code repetition.",
      "range": {
        "startLine": 404,
        "startChar": 15,
        "endLine": 434,
        "endChar": 17
      },
      "revId": "ced166393bba737551c13ecbc27d5296bc29da51",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a72e520_3076933f",
        "filename": "MineZPRft/Terrain/Chunk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 464,
      "author": {
        "id": 1003055
      },
      "writtenOn": "2016-02-29T18:07:49Z",
      "side": 1,
      "message": "Why are those coordinates as they are?\nLooking at previous methods I\u0027d think that it would be for(z), for(x) and then for(y), but it\u0027s not.\nCould You put comments on how it\u0027s connected to current plane that\u0027s processed?",
      "range": {
        "startLine": 459,
        "startChar": 7,
        "endLine": 464,
        "endChar": 45
      },
      "revId": "ced166393bba737551c13ecbc27d5296bc29da51",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a72e520_50730f4d",
        "filename": "MineZPRft/Terrain/Chunk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 528,
      "author": {
        "id": 1003055
      },
      "writtenOn": "2016-02-29T18:07:49Z",
      "side": 1,
      "message": "Processing",
      "range": {
        "startLine": 528,
        "startChar": 14,
        "endLine": 528,
        "endChar": 25
      },
      "revId": "ced166393bba737551c13ecbc27d5296bc29da51",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a72e520_9094a738",
        "filename": "MineZPRft/Terrain/Chunk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 531,
      "author": {
        "id": 1003055
      },
      "writtenOn": "2016-02-29T18:07:49Z",
      "side": 1,
      "message": "and of course width and height are used for shifting according to which plane these quads belong to. I still do not see these planes in my mind. So please be sure to put up a comment in these ProcessPlaneX,Y,Z methods ;)",
      "range": {
        "startLine": 529,
        "startChar": 11,
        "endLine": 531,
        "endChar": 96
      },
      "revId": "ced166393bba737551c13ecbc27d5296bc29da51",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a72e520_d0b53fce",
        "filename": "MineZPRft/Terrain/Chunk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 580,
      "author": {
        "id": 1003055
      },
      "writtenOn": "2016-02-29T18:07:49Z",
      "side": 1,
      "message": "You can swap all of these with a simple lambda, that takes either v0 or v1,v2,v3.\n\nThen You can make lambda function readable, instead of stacking all of these lines together, moreover there would be less code in the rest of the method, so it\u0027d be more readable as well.",
      "range": {
        "startLine": 577,
        "startChar": 12,
        "endLine": 580,
        "endChar": 83
      },
      "revId": "ced166393bba737551c13ecbc27d5296bc29da51",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a72e520_50c14f2d",
        "filename": "MineZPRft/Terrain/Chunk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 660,
      "author": {
        "id": 1003055
      },
      "writtenOn": "2016-02-29T18:07:49Z",
      "side": 1,
      "message": "Instead of ugly if, we can use some cpp11 magic.\nMake array out of voxPlus,Minus etc. and then use any_of, all_of or none_of (depending on what You prefer).\n\nHere you can read sth about them:\nhttp://en.cppreference.com/w/cpp/algorithm/all_any_none_of",
      "range": {
        "startLine": 646,
        "startChar": 24,
        "endLine": 660,
        "endChar": 81
      },
      "revId": "ced166393bba737551c13ecbc27d5296bc29da51",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a72e520_50c5cf59",
        "filename": "MineZPRft/Terrain/Chunk.hpp",
        "patchSetId": 3
      },
      "lineNbr": 133,
      "author": {
        "id": 1003055
      },
      "writtenOn": "2016-02-29T18:07:49Z",
      "side": 1,
      "message": "@param values should be properly aligned - last line is not.\n\nAlso \"Naive\" and \"Greedy Meshing\" don\u0027t need capital letters imho.",
      "range": {
        "startLine": 129,
        "startChar": 6,
        "endLine": 133,
        "endChar": 78
      },
      "revId": "ced166393bba737551c13ecbc27d5296bc29da51",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}